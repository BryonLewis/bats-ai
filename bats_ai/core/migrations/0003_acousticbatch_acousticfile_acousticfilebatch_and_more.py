# Generated by Django 4.1.13 on 2023-11-06 19:26

import django.contrib.gis.db.models.fields
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ('core', '0002_initial_models'),
    ]

    operations = [
        migrations.CreateModel(
            name='AcousticBatch',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    ),
                ),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('processed_date', models.DateTimeField(blank=True, null=True)),
                ('processing_notes', models.TextField(blank=True, null=True)),
                ('transaction_uuid', models.UUIDField(blank=True, null=True)),
            ],
            options={
                'db_table': 'acoustic_batch',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AcousticFile',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('recording_time', models.DateTimeField(blank=True, null=True)),
                (
                    'recording_location',
                    django.contrib.gis.db.models.fields.GeometryField(
                        blank=True, null=True, srid=0
                    ),
                ),
                ('file_name', models.CharField(max_length=255)),
                ('s3_verified', models.BooleanField(blank=True, null=True)),
                ('length_ms', models.IntegerField(blank=True, null=True)),
                ('size_bytes', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'acoustic_file',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AcousticFileBatch',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('recording_night', models.DateField()),
                ('vetter', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'acoustic_file_batch',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AcousticFileImage',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('offset_milliseconds', models.IntegerField()),
                ('frequency', models.IntegerField()),
                ('image', models.TextField()),
            ],
            options={
                'db_table': 'acoustic_file_image',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Classifier',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    ),
                ),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.IntegerField(blank=True, null=True)),
                ('public', models.BooleanField(blank=True, null=True)),
                ('project_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'classifier',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EventGeometry',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    ),
                ),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                (
                    'geom',
                    django.contrib.gis.db.models.fields.GeometryField(
                        blank=True, null=True, srid=0
                    ),
                ),
                ('project_id', models.IntegerField()),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('transaction_uuid', models.UUIDField(blank=True, null=True)),
            ],
            options={
                'db_table': 'event_geometry',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    ),
                ),
                ('project_key', models.CharField(max_length=255)),
                ('project_name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('organization_id', models.IntegerField()),
                ('sample_design_id', models.IntegerField(blank=True, null=True)),
                ('sample_design_details', models.TextField(blank=True, null=True)),
                ('sample_frame_id', models.IntegerField()),
                ('soft_delete', models.BooleanField(blank=True, null=True)),
                ('archive', models.BooleanField(blank=True, null=True)),
                ('grts_priority', models.BooleanField(blank=True, null=True)),
                ('test', models.BooleanField(blank=True, null=True)),
                ('protocols', models.BooleanField(blank=True, null=True)),
                ('endangered', models.BooleanField(blank=True, null=True)),
                ('control', models.BooleanField(blank=True, null=True)),
                ('batamp', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'project',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Software',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    ),
                ),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('developer', models.CharField(blank=True, max_length=100, null=True)),
                ('version_number', models.CharField(blank=True, max_length=25, null=True)),
            ],
            options={
                'db_table': 'software',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Species',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    ),
                ),
                ('species_code', models.CharField(blank=True, max_length=10, null=True)),
                ('family', models.CharField(blank=True, max_length=50, null=True)),
                ('genus', models.CharField(blank=True, max_length=50, null=True)),
                ('species', models.CharField(blank=True, max_length=100, null=True)),
                ('common_name', models.CharField(blank=True, max_length=100, null=True)),
                ('species_code_6', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'species',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Survey',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    ),
                ),
                ('start_date', models.DateField(blank=True, null=True)),
                ('grts_cell_id', models.IntegerField(blank=True, null=True)),
                ('sample_frame', models.TextField(blank=True, null=True)),
                ('transaction_uuid', models.UUIDField(blank=True, null=True)),
                ('grts_id', models.IntegerField()),
            ],
            options={
                'db_table': 'survey',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SurveyEvent',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('transaction_uuid', models.UUIDField(blank=True, null=True)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('modified_date', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=255, null=True)),
                ('modified_by', models.CharField(blank=True, max_length=255, null=True)),
                ('uuid', models.UUIDField()),
            ],
            options={
                'db_table': 'survey_event',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SurveyType',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    ),
                ),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('map_color', models.CharField(blank=True, max_length=7, null=True)),
            ],
            options={
                'db_table': 'survey_type',
                'managed': False,
            },
        ),
    ]
